<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-23T22:32:58Z" name="Surefire suite" finished-at="2023-02-23T22:33:15Z" duration-ms="17018">
    <groups>
    </groups>
    <test started-at="2023-02-23T22:32:58Z" name="Surefire test" finished-at="2023-02-23T22:33:15Z" duration-ms="17018">
      <class name="TestOrder">
        <test-method signature="createOrderNotAuthorized()" started-at="2023-02-23T22:32:58Z" name="createOrderNotAuthorized" finished-at="2023-02-23T22:33:06Z" duration-ms="7441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrderNotAuthorized -->
        <test-method signature="createOrderAuthorized()" started-at="2023-02-23T22:32:58Z" name="createOrderAuthorized" finished-at="2023-02-23T22:33:07Z" duration-ms="8609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrderAuthorized -->
        <test-method signature="createOderWithNullIngredient()" started-at="2023-02-23T22:32:58Z" name="createOderWithNullIngredient" finished-at="2023-02-23T22:33:08Z" duration-ms="9303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOderWithNullIngredient -->
      </class> <!-- TestOrder -->
      <class name="TestUserLogin">
        <test-method signature="notLoggedInvalidPassword()" started-at="2023-02-23T22:33:13Z" name="notLoggedInvalidPassword" finished-at="2023-02-23T22:33:14Z" duration-ms="1199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notLoggedInvalidPassword -->
        <test-method signature="notLoggedInvalidEmail()" started-at="2023-02-23T22:33:13Z" name="notLoggedInvalidEmail" finished-at="2023-02-23T22:33:14Z" duration-ms="617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notLoggedInvalidEmail -->
        <test-method signature="loggedIn()" started-at="2023-02-23T22:33:13Z" name="loggedIn" finished-at="2023-02-23T22:33:15Z" duration-ms="1773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loggedIn -->
      </class> <!-- TestUserLogin -->
      <class name="TestUserEditProfile">
        <test-method signature="userEditLoginNotAuthorized()" started-at="2023-02-23T22:33:08Z" name="userEditLoginNotAuthorized" finished-at="2023-02-23T22:33:08Z" duration-ms="715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEditLoginNotAuthorized -->
        <test-method signature="userEditAuthorized()" started-at="2023-02-23T22:33:08Z" name="userEditAuthorized" finished-at="2023-02-23T22:33:09Z" duration-ms="1440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEditAuthorized -->
        <test-method signature="userEditNameNotAuthorized()" started-at="2023-02-23T22:33:08Z" name="userEditNameNotAuthorized" finished-at="2023-02-23T22:33:10Z" duration-ms="2250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEditNameNotAuthorized -->
        <test-method signature="userEditNameAuthorized()" started-at="2023-02-23T22:33:08Z" name="userEditNameAuthorized" finished-at="2023-02-23T22:33:11Z" duration-ms="3523" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <403>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <403>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:505)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:687)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor138.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:128)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:136)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at TestUserEditProfile.userEditNameAuthorized(TestUserEditProfile.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:82)
at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:70)
at org.testng.TestRunner$1.run(TestRunner.java:570)
at org.testng.TestRunner.runJUnitWorkers(TestRunner.java:717)
at org.testng.TestRunner.privateRunJUnit(TestRunner.java:601)
at org.testng.TestRunner.run(TestRunner.java:502)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:198)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEditNameAuthorized -->
      </class> <!-- TestUserEditProfile -->
      <class name="TestUserRegistration">
        <test-method signature="userCreated()" started-at="2023-02-23T22:33:11Z" name="userCreated" finished-at="2023-02-23T22:33:13Z" duration-ms="2050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCreated -->
        <test-method signature="creationSameUserFailed()" started-at="2023-02-23T22:33:11Z" name="creationSameUserFailed" finished-at="2023-02-23T22:33:12Z" duration-ms="978" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creationSameUserFailed -->
      </class> <!-- TestUserRegistration -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
